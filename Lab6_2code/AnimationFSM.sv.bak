module FSM (input logic Clk, Run, Reset, M,
				output logic animation1, animation2);
				
				
				enum logic [1:0]{animpt1, animpt2/*, animpt3*/}
				
				always_ff @ (posedge Clk)  
				begin
				if (Reset)
					curr_state <= start;
				else 
					curr_state <= next_state;
				end
				
				
				always_comb
				begin
				
					next_state = curr_state;
					unique case (curr_state)
					
					animpt1: next_state = animpt2;
					animpt2: next_state = animpt1; //next_state = animpt3;
					//animpt3: next_state = animpt1;